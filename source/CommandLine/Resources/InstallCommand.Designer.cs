//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuDeploy.CommandLine.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class InstallCommand {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal InstallCommand() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuDeploy.CommandLine.Resources.InstallCommand", typeof(InstallCommand).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name(s) of the app.config and web.config transformtion(s) that shall be applied to the configuration files of your websites, web applications and applications (e.g. &quot;PROD-A&quot;, &quot;PROD-B&quot;)..
        /// </summary>
        internal static string ArgumentDescriptionBuildConfigurationProfilesTemplate {
            get {
                return ResourceManager.GetString("ArgumentDescriptionBuildConfigurationProfilesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The deployment type: {0} (default: {1})..
        /// </summary>
        internal static string ArgumentDescriptionDeploymentTypeTemplate {
            get {
                return ResourceManager.GetString("ArgumentDescriptionDeploymentTypeTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The id of the NuGet package to install (e.g. &quot;NuDeploy.CommandLine&quot;)..
        /// </summary>
        internal static string ArgumentDescriptionNugetPackageId {
            get {
                return ResourceManager.GetString("ArgumentDescriptionNugetPackageId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name(s) of the system settings transformtion profile(s) that shall be applied to the system settings of your deployment package before the installation (optional parameter; e.g. &quot;PROD-A&quot;, &quot;PROD-B&quot;, &quot;B-Instance,Server-1&quot;, ...). The transformed file will be saved in the &quot;{0}&quot; file of your package folder..
        /// </summary>
        internal static string ArgumentDescriptionSystemSettingTransformationProfilesTemplate {
            get {
                return ResourceManager.GetString("ArgumentDescriptionSystemSettingTransformationProfilesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install the specified NuGet package..
        /// </summary>
        internal static string CommandDescriptionText {
            get {
                return ResourceManager.GetString("CommandDescriptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want to install a package you must supply these parameters (one after another): Package Id, Deployment Type, Systemsetting Transformations, Configfile Transformations.
        /// </summary>
        internal static string CommandExampleDescription1 {
            get {
                return ResourceManager.GetString("CommandExampleDescription1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The deployment type &quot;{0}&quot; is unknown. Please use one of these instead: {1}..
        /// </summary>
        internal static string DeploymentTypeWasNotRecognizedMessageTemplate {
            get {
                return ResourceManager.GetString("DeploymentTypeWasNotRecognizedMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installation of package &quot;{0}&quot; failed (Deployment Type: {1}, Force Installation: {2}, Systemsetting Transformations: {3}, Buildconfiguration Transformations: {4})..
        /// </summary>
        internal static string InstallationFailedMessageTemplate {
            get {
                return ResourceManager.GetString("InstallationFailedMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installation of package &quot;{0}&quot; succeeded (Deployment Type: {1}, Force Installation: {2}, Systemsetting Transformations: {3}, Buildconfiguration Transformations: {4})..
        /// </summary>
        internal static string InstallationSucceededMessageTemplate {
            get {
                return ResourceManager.GetString("InstallationSucceededMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No package id specified..
        /// </summary>
        internal static string NoPackageIdSpecifiedMessage {
            get {
                return ResourceManager.GetString("NoPackageIdSpecifiedMessage", resourceCulture);
            }
        }
    }
}
