//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuDeploy.Core.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class PhysicalFilesystemAccessor {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PhysicalFilesystemAccessor() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuDeploy.Core.Resources.PhysicalFilesystemAccessor", typeof(PhysicalFilesystemAccessor).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to copy file &quot;{0}&quot; to &quot;{1}&quot;. {2}.
        /// </summary>
        internal static string CopyFileExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("CopyFileExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to copy file &quot;{0}&quot; to &quot;{1}&quot;, because either the source or the target file is being used by another process. {2}.
        /// </summary>
        internal static string CopyFileIOExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("CopyFileIOExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot copy a file if the source file does not exist ({0})..
        /// </summary>
        internal static string CopyFileSourceFileDoesNotExistMessageTemplate {
            get {
                return ResourceManager.GetString("CopyFileSourceFileDoesNotExistMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot copy a file if you don&apos;t specify a source file..
        /// </summary>
        internal static string CopyFileSourceFileIsNullOrEmpty {
            get {
                return ResourceManager.GetString("CopyFileSourceFileIsNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot copy a file if you don&apos;t specify a target file..
        /// </summary>
        internal static string CopyFileTargetFileIsNullOrEmpty {
            get {
                return ResourceManager.GetString("CopyFileTargetFileIsNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create directory &quot;{0}&quot;. {1}.
        /// </summary>
        internal static string CreateDirectoryExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("CreateDirectoryExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory you are trying to create does already exist: {0}.
        /// </summary>
        internal static string CreateDirectoryPathAlreadyExistsMessageTemplate {
            get {
                return ResourceManager.GetString("CreateDirectoryPathAlreadyExistsMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot create a directory if you don&apos;t specify a file path..
        /// </summary>
        internal static string CreateDirectoryPathIsNullOrEmptyMessage {
            get {
                return ResourceManager.GetString("CreateDirectoryPathIsNullOrEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file you are trying to delete does not exist ({0})..
        /// </summary>
        internal static string DeleteFileDoesNotExistMessageTemplate {
            get {
                return ResourceManager.GetString("DeleteFileDoesNotExistMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot delete file &quot;{0}&quot;. {1}.
        /// </summary>
        internal static string DeleteFileExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("DeleteFileExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot delete file &quot;{0}&quot; because it is being used. {1}.
        /// </summary>
        internal static string DeleteFileIOExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("DeleteFileIOExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot delete a file if you don&apos;t specify a file name or path..
        /// </summary>
        internal static string DeleteFilePathIsNullOrEmptyMessage {
            get {
                return ResourceManager.GetString("DeleteFilePathIsNullOrEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder you are trying to delete does not exist ({0})..
        /// </summary>
        internal static string DeleteFolderDoesNotExistMessageTemplate {
            get {
                return ResourceManager.GetString("DeleteFolderDoesNotExistMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot delete folder &quot;{0}&quot;. {1}.
        /// </summary>
        internal static string DeleteFolderExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("DeleteFolderExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot delete folder &quot;{0}&quot; because one or more files in it are being used. {1}.
        /// </summary>
        internal static string DeleteFolderIOExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("DeleteFolderIOExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot delete a folder if you don&apos;t specify a path..
        /// </summary>
        internal static string DeleteFolderPathIsNullOrEmptyMessage {
            get {
                return ResourceManager.GetString("DeleteFolderPathIsNullOrEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create create path &quot;{0}&quot;. {1}.
        /// </summary>
        internal static string EnsureParentDirectoryExistsExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("EnsureParentDirectoryExistsExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot call EnsureParentDirectoryExists if you don&apos;t specify a path..
        /// </summary>
        internal static string EnsureParentDirectoryExistsPathIsNullOrEmpty {
            get {
                return ResourceManager.GetString("EnsureParentDirectoryExistsPathIsNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file you are trying to get the content from does not exist ({0})..
        /// </summary>
        internal static string GetFileContentDoesNotExistMessageTemplate {
            get {
                return ResourceManager.GetString("GetFileContentDoesNotExistMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read the contents of the file &quot;{0}&quot;. {1}.
        /// </summary>
        internal static string GetFileContentExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("GetFileContentExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read the contents of the file &quot;{0}&quot; because it is being written to by another process. {1}.
        /// </summary>
        internal static string GetFileContentIOExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("GetFileContentIOExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot retrieve the content of a file if you don&apos;t specify a file name..
        /// </summary>
        internal static string GetFileContentPathIsNullOrEmptyMessage {
            get {
                return ResourceManager.GetString("GetFileContentPathIsNullOrEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open a stream for the file &quot;{0}&quot;. {1}.
        /// </summary>
        internal static string GetNewFileStreamExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("GetNewFileStreamExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open a stream for the file &quot;{0}&quot; because the file is being used by another process. {1}.
        /// </summary>
        internal static string GetNewFileStreamIOExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("GetNewFileStreamIOExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot request a file stream if you don&apos;t specify a file path..
        /// </summary>
        internal static string GetNewFileStreamPathIsNullOrEmpty {
            get {
                return ResourceManager.GetString("GetNewFileStreamPathIsNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot request a TextReader for a file that does not exist ({0})..
        /// </summary>
        internal static string GetTextReaderDoesNotExistMessageTemplate {
            get {
                return ResourceManager.GetString("GetTextReaderDoesNotExistMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a TextReader for the file &quot;{0}&quot;. {1}.
        /// </summary>
        internal static string GetTextReaderExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("GetTextReaderExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a TextReader for the file &quot;{0}&quot; because it is being written to by another process. {1}.
        /// </summary>
        internal static string GetTextReaderIOExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("GetTextReaderIOExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot request a TextReader if you don&apos;t specify a file name..
        /// </summary>
        internal static string GetTextReaderPathIsNullOrEmptyMessage {
            get {
                return ResourceManager.GetString("GetTextReaderPathIsNullOrEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a TextWriter for the file &quot;{0}&quot;. {1}.
        /// </summary>
        internal static string GetTextWriterExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("GetTextWriterExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a TextWriter for the file &quot;{0}&quot; because the file is being used by another process. {1}.
        /// </summary>
        internal static string GetTextWriterIOExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("GetTextWriterIOExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For writing to a file you should supply a file path that is not null or empty..
        /// </summary>
        internal static string GetTextWriterPathIsNullOrEmpty {
            get {
                return ResourceManager.GetString("GetTextWriterPathIsNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot move file &quot;{0}&quot; to &quot;{1}&quot;. {2}.
        /// </summary>
        internal static string MoveFileExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("MoveFileExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot move a file if you don&apos;t specify a target path..
        /// </summary>
        internal static string MoveFilePathIsNullOrEmptyMessage {
            get {
                return ResourceManager.GetString("MoveFilePathIsNullOrEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Before moving a file please make sure that the source file exists (Source: {0}, Target: {1})..
        /// </summary>
        internal static string MoveFileSourceFileDoesNotExistMessageTemplate {
            get {
                return ResourceManager.GetString("MoveFileSourceFileDoesNotExistMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content you are trying to write to &quot;{0}&quot; is null..
        /// </summary>
        internal static string WriteContentToFileContentIsNullMessageTemplate {
            get {
                return ResourceManager.GetString("WriteContentToFileContentIsNullMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot write content to &quot;{0}&quot;. {1}.
        /// </summary>
        internal static string WriteContentToFileExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("WriteContentToFileExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot write content to &quot;{0}&quot; because the file is being used by another process. {1}.
        /// </summary>
        internal static string WriteContentToFileIOExceptionMessageTemplate {
            get {
                return ResourceManager.GetString("WriteContentToFileIOExceptionMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For writing to a file you should supply a file path that is not null or empty..
        /// </summary>
        internal static string WriteContentToFilePathIsNullOrEmptyMessage {
            get {
                return ResourceManager.GetString("WriteContentToFilePathIsNullOrEmptyMessage", resourceCulture);
            }
        }
    }
}
